{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\willi\\\\Documents\\\\modern-react-apps\\\\new-router-app\\\\frontend\\\\src\\\\pages\\\\EditEvent.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport EventForm from \"../components/EventForm\";\nimport { json, useLoaderData } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditEventPage = () => {\n  _s();\n  const data = useLoaderData();\n  return /*#__PURE__*/_jsxDEV(EventForm, {\n    event: data.event\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 12\n  }, this);\n};\n_s(EditEventPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EditEventPage;\nexport default EditEventPage;\n\n/* export async function loader({ req, params }) {\r\n    const id = params.eventId;\r\n    const response = await fetch(`http://localhost:8080/events/${id}`);\r\n\r\n    if (!response.ok) {\r\n        throw json(\r\n            { message: \"Could not fetch details for selected event.\" },\r\n            { status: 500 }\r\n        );\r\n    }\r\n\r\n    return response;\r\n} */\nvar _c;\n$RefreshReg$(_c, \"EditEventPage\");","map":{"version":3,"names":["React","EventForm","json","useLoaderData","jsxDEV","_jsxDEV","EditEventPage","_s","data","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/willi/Documents/modern-react-apps/new-router-app/frontend/src/pages/EditEvent.js"],"sourcesContent":["import React from \"react\";\r\nimport EventForm from \"../components/EventForm\";\r\nimport { json, useLoaderData } from \"react-router-dom\";\r\n\r\nconst EditEventPage = () => {\r\n    const data = useLoaderData();\r\n    return <EventForm event={data.event} />;\r\n};\r\n\r\nexport default EditEventPage;\r\n\r\n/* export async function loader({ req, params }) {\r\n    const id = params.eventId;\r\n    const response = await fetch(`http://localhost:8080/events/${id}`);\r\n\r\n    if (!response.ok) {\r\n        throw json(\r\n            { message: \"Could not fetch details for selected event.\" },\r\n            { status: 500 }\r\n        );\r\n    }\r\n\r\n    return response;\r\n} */\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,SAASC,IAAI,EAAEC,aAAa,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAMC,IAAI,GAAGL,aAAa,CAAC,CAAC;EAC5B,oBAAOE,OAAA,CAACJ,SAAS;IAACQ,KAAK,EAAED,IAAI,CAACC;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC3C,CAAC;AAACN,EAAA,CAHID,aAAa;EAAA,QACFH,aAAa;AAAA;AAAAW,EAAA,GADxBR,aAAa;AAKnB,eAAeA,aAAa;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}