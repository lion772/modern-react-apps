{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\willi\\\\Documents\\\\modern-react-apps\\\\new-router-app\\\\frontend\\\\src\\\\pages\\\\NewEvent.js\";\nimport React from \"react\";\nimport EventForm from \"../components/EventForm\";\nimport { json } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewEventPage = () => {\n  return /*#__PURE__*/_jsxDEV(EventForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 12\n  }, this);\n};\n_c = NewEventPage;\nexport default NewEventPage;\nexport async function action(_ref) {\n  let {\n    req,\n    params\n  } = _ref;\n  console.log(req);\n  const data = await req.formData();\n  const eventData = {\n    title: data.get(\"title\"),\n    image: data.get(\"image\"),\n    date: data.get(\"date\"),\n    description: data.get(\"description\")\n  };\n  console.log(first);\n  const response = await fetch(\"http://localhost:8080/events\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(eventData)\n  });\n  console.log(res);\n  if (!response.ok) {\n    throw json({\n      message: \"Could not save event.\"\n    }, {\n      status: 500\n    });\n  }\n  console.log(response);\n}\nvar _c;\n$RefreshReg$(_c, \"NewEventPage\");","map":{"version":3,"names":["React","EventForm","json","jsxDEV","_jsxDEV","NewEventPage","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","_ref","req","params","console","log","data","formData","eventData","title","get","image","date","description","first","response","fetch","method","headers","body","JSON","stringify","res","ok","message","status","$RefreshReg$"],"sources":["C:/Users/willi/Documents/modern-react-apps/new-router-app/frontend/src/pages/NewEvent.js"],"sourcesContent":["import React from \"react\";\r\nimport EventForm from \"../components/EventForm\";\r\nimport { json } from \"react-router-dom\";\r\n\r\nconst NewEventPage = () => {\r\n    return <EventForm />;\r\n};\r\n\r\nexport default NewEventPage;\r\n\r\nexport async function action({ req, params }) {\r\n    console.log(req);\r\n    const data = await req.formData();\r\n    const eventData = {\r\n        title: data.get(\"title\"),\r\n        image: data.get(\"image\"),\r\n        date: data.get(\"date\"),\r\n        description: data.get(\"description\"),\r\n    };\r\n    console.log(first)\r\n    const response = await fetch(\"http://localhost:8080/events\", {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(eventData),\r\n    });\r\n    console.log(res);\r\n\r\n    if (!response.ok) {\r\n        throw json({ message: \"Could not save event.\" }, { status: 500 });\r\n    }\r\n    console.log(response);\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EACvB,oBAAOD,OAAA,CAACH,SAAS;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACxB,CAAC;AAACC,EAAA,GAFIL,YAAY;AAIlB,eAAeA,YAAY;AAE3B,OAAO,eAAeM,MAAMA,CAAAC,IAAA,EAAkB;EAAA,IAAjB;IAAEC,GAAG;IAAEC;EAAO,CAAC,GAAAF,IAAA;EACxCG,OAAO,CAACC,GAAG,CAACH,GAAG,CAAC;EAChB,MAAMI,IAAI,GAAG,MAAMJ,GAAG,CAACK,QAAQ,CAAC,CAAC;EACjC,MAAMC,SAAS,GAAG;IACdC,KAAK,EAAEH,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBC,KAAK,EAAEL,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBE,IAAI,EAAEN,IAAI,CAACI,GAAG,CAAC,MAAM,CAAC;IACtBG,WAAW,EAAEP,IAAI,CAACI,GAAG,CAAC,aAAa;EACvC,CAAC;EACDN,OAAO,CAACC,GAAG,CAACS,KAAK,CAAC;EAClB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;IACzDC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACb,SAAS;EAClC,CAAC,CAAC;EACFJ,OAAO,CAACC,GAAG,CAACiB,GAAG,CAAC;EAEhB,IAAI,CAACP,QAAQ,CAACQ,EAAE,EAAE;IACd,MAAMhC,IAAI,CAAC;MAAEiC,OAAO,EAAE;IAAwB,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EACrE;EACArB,OAAO,CAACC,GAAG,CAACU,QAAQ,CAAC;AACzB;AAAC,IAAAhB,EAAA;AAAA2B,YAAA,CAAA3B,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}