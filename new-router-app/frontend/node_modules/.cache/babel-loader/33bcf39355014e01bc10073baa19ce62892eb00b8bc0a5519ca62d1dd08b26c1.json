{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\willi\\\\Documents\\\\modern-react-apps\\\\new-router-app\\\\frontend\\\\src\\\\pages\\\\Events.js\",\n  _s = $RefreshSig$();\nimport EventsList from \"../components/EventsList\";\nimport { useLoaderData } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const {\n    events,\n    error\n  } = useLoaderData();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventsList, {\n      events: events\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(EventsPage, \"pBBGmJoR/Qp5ZOOV5QHL/FV4pJM=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport async function loader() {\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (!response.ok) {\n    // TODO: handle error later\n    return {\n      isError: true,\n      message: \"Could not fetch events...\"\n    };\n  } else {\n    return response;\n  }\n}\nexport default EventsPage;\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["EventsList","useLoaderData","jsxDEV","_jsxDEV","Fragment","_Fragment","EventsPage","_s","events","error","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","response","fetch","ok","isError","message","$RefreshReg$"],"sources":["C:/Users/willi/Documents/modern-react-apps/new-router-app/frontend/src/pages/Events.js"],"sourcesContent":["import EventsList from \"../components/EventsList\";\r\nimport { useLoaderData } from \"react-router-dom\";\r\n\r\nfunction EventsPage() {\r\n    const { events, error } = useLoaderData();\r\n    return (\r\n        <>\r\n            <EventsList events={events} />\r\n        </>\r\n    );\r\n}\r\n\r\nexport async function loader() {\r\n    const response = await fetch(\"http://localhost:8080/events\");\r\n\r\n    if (!response.ok) {\r\n        // TODO: handle error later\r\n        return { isError: true, message: \"Could not fetch events...\" };\r\n    } else {\r\n        return response;\r\n    }\r\n}\r\n\r\nexport default EventsPage;\r\n"],"mappings":";;AAAA,OAAOA,UAAU,MAAM,0BAA0B;AACjD,SAASC,aAAa,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEjD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM;IAAEC,MAAM;IAAEC;EAAM,CAAC,GAAGR,aAAa,CAAC,CAAC;EACzC,oBACIE,OAAA,CAAAE,SAAA;IAAAK,QAAA,eACIP,OAAA,CAACH,UAAU;MAACQ,MAAM,EAAEA;IAAO;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBAChC,CAAC;AAEX;AAACP,EAAA,CAPQD,UAAU;EAAA,QACWL,aAAa;AAAA;AAAAc,EAAA,GADlCT,UAAU;AASnB,OAAO,eAAeU,MAAMA,CAAA,EAAG;EAC3B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IACd;IACA,OAAO;MAAEC,OAAO,EAAE,IAAI;MAAEC,OAAO,EAAE;IAA4B,CAAC;EAClE,CAAC,MAAM;IACH,OAAOJ,QAAQ;EACnB;AACJ;AAEA,eAAeX,UAAU;AAAC,IAAAS,EAAA;AAAAO,YAAA,CAAAP,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}