{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\willi\\\\Documents\\\\modern-react-apps\\\\new-router-app\\\\frontend\\\\src\\\\pages\\\\EventDetail.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { json, useLoaderData } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventDetailPage = () => {\n  _s();\n  const data = useLoaderData();\n  const event = data.event;\n  console.log(event);\n  return /*#__PURE__*/_jsxDEV(EventItem, {\n    event: event\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 12\n  }, this);\n};\n_s(EventDetailPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nexport async function loader(_ref) {\n  let {\n    req,\n    params\n  } = _ref;\n  const id = params.eventId;\n  const response = await fetch(`http://localhost:8080/events/${id}aa`);\n  if (!response.ok) {\n    throw json({\n      message: \"Could not fetch details for selected event.\"\n    }, {\n      status: 500\n    });\n  }\n  return response;\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["React","json","useLoaderData","EventItem","jsxDEV","_jsxDEV","EventDetailPage","_s","data","event","console","log","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","_ref","req","params","id","eventId","response","fetch","ok","message","status","$RefreshReg$"],"sources":["C:/Users/willi/Documents/modern-react-apps/new-router-app/frontend/src/pages/EventDetail.js"],"sourcesContent":["import React from \"react\";\r\nimport { json, useLoaderData } from \"react-router-dom\";\r\nimport EventItem from \"../components/EventItem\";\r\n\r\nconst EventDetailPage = () => {\r\n    const data = useLoaderData();\r\n    const event = data.event;\r\n    console.log(event);\r\n\r\n    return <EventItem event={event} />;\r\n};\r\n\r\nexport default EventDetailPage;\r\n\r\nexport async function loader({ req, params }) {\r\n    const id = params.eventId;\r\n    const response = await fetch(`http://localhost:8080/events/${id}aa`);\r\n\r\n    if (!response.ok) {\r\n        throw json(\r\n            { message: \"Could not fetch details for selected event.\" },\r\n            { status: 500 }\r\n        );\r\n    }\r\n\r\n    return response;\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,aAAa,QAAQ,kBAAkB;AACtD,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAMC,IAAI,GAAGN,aAAa,CAAC,CAAC;EAC5B,MAAMO,KAAK,GAAGD,IAAI,CAACC,KAAK;EACxBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EAElB,oBAAOJ,OAAA,CAACF,SAAS;IAACM,KAAK,EAAEA;EAAM;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACtC,CAAC;AAACR,EAAA,CANID,eAAe;EAAA,QACJJ,aAAa;AAAA;AAAAc,EAAA,GADxBV,eAAe;AAQrB,eAAeA,eAAe;AAE9B,OAAO,eAAeW,MAAMA,CAAAC,IAAA,EAAkB;EAAA,IAAjB;IAAEC,GAAG;IAAEC;EAAO,CAAC,GAAAF,IAAA;EACxC,MAAMG,EAAE,GAAGD,MAAM,CAACE,OAAO;EACzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,gCAA+BH,EAAG,IAAG,CAAC;EAEpE,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;IACd,MAAMxB,IAAI,CACN;MAAEyB,OAAO,EAAE;IAA8C,CAAC,EAC1D;MAAEC,MAAM,EAAE;IAAI,CAClB,CAAC;EACL;EAEA,OAAOJ,QAAQ;AACnB;AAAC,IAAAP,EAAA;AAAAY,YAAA,CAAAZ,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}