{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\willi\\\\Documents\\\\modern-react-apps\\\\new-router-app\\\\frontend\\\\src\\\\pages\\\\NewEvent.js\";\nimport React from \"react\";\nimport EventForm from \"../components/EventForm\";\nimport { json, redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewEventPage = () => {\n  return /*#__PURE__*/_jsxDEV(EventForm, {\n    method: \"post\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 12\n  }, this);\n};\n_c = NewEventPage;\nexport default NewEventPage;\nexport async function action(_ref) {\n  let {\n    request,\n    params\n  } = _ref;\n  const data = await request.formData();\n  const eventData = {\n    title: data.get(\"title\"),\n    image: data.get(\"image\"),\n    date: data.get(\"date\"),\n    description: data.get(\"description\")\n  };\n  const response = await fetch(\"http://localhost:8080/events\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(eventData)\n  });\n  if (response.status === 422) {\n    return response;\n  }\n  if (!response.ok) {\n    throw json({\n      message: \"Could not save event.\"\n    }, {\n      status: 500\n    });\n  } else {\n    return redirect(\"..\");\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"NewEventPage\");","map":{"version":3,"names":["React","EventForm","json","redirect","jsxDEV","_jsxDEV","NewEventPage","method","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","_ref","request","params","data","formData","eventData","title","get","image","date","description","response","fetch","headers","body","JSON","stringify","status","ok","message","$RefreshReg$"],"sources":["C:/Users/willi/Documents/modern-react-apps/new-router-app/frontend/src/pages/NewEvent.js"],"sourcesContent":["import React from \"react\";\r\nimport EventForm from \"../components/EventForm\";\r\nimport { json, redirect } from \"react-router-dom\";\r\n\r\nconst NewEventPage = () => {\r\n    return <EventForm method={\"post\"} />;\r\n};\r\n\r\nexport default NewEventPage;\r\n\r\nexport async function action({ request, params }) {\r\n    const data = await request.formData();\r\n    const eventData = {\r\n        title: data.get(\"title\"),\r\n        image: data.get(\"image\"),\r\n        date: data.get(\"date\"),\r\n        description: data.get(\"description\"),\r\n    };\r\n    const response = await fetch(\"http://localhost:8080/events\", {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(eventData),\r\n    });\r\n\r\n    if (response.status === 422) {\r\n        return response;\r\n    }\r\n\r\n    if (!response.ok) {\r\n        throw json({ message: \"Could not save event.\" }, { status: 500 });\r\n    } else {\r\n        return redirect(\"..\");\r\n    }\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,SAASC,IAAI,EAAEC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EACvB,oBAAOD,OAAA,CAACJ,SAAS;IAACM,MAAM,EAAE;EAAO;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACxC,CAAC;AAACC,EAAA,GAFIN,YAAY;AAIlB,eAAeA,YAAY;AAE3B,OAAO,eAAeO,MAAMA,CAAAC,IAAA,EAAsB;EAAA,IAArB;IAAEC,OAAO;IAAEC;EAAO,CAAC,GAAAF,IAAA;EAC5C,MAAMG,IAAI,GAAG,MAAMF,OAAO,CAACG,QAAQ,CAAC,CAAC;EACrC,MAAMC,SAAS,GAAG;IACdC,KAAK,EAAEH,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBC,KAAK,EAAEL,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBE,IAAI,EAAEN,IAAI,CAACI,GAAG,CAAC,MAAM,CAAC;IACtBG,WAAW,EAAEP,IAAI,CAACI,GAAG,CAAC,aAAa;EACvC,CAAC;EACD,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;IACzDnB,MAAM,EAAE,MAAM;IACdoB,OAAO,EAAE;MACL,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACX,SAAS;EAClC,CAAC,CAAC;EAEF,IAAIM,QAAQ,CAACM,MAAM,KAAK,GAAG,EAAE;IACzB,OAAON,QAAQ;EACnB;EAEA,IAAI,CAACA,QAAQ,CAACO,EAAE,EAAE;IACd,MAAM9B,IAAI,CAAC;MAAE+B,OAAO,EAAE;IAAwB,CAAC,EAAE;MAAEF,MAAM,EAAE;IAAI,CAAC,CAAC;EACrE,CAAC,MAAM;IACH,OAAO5B,QAAQ,CAAC,IAAI,CAAC;EACzB;AACJ;AAAC,IAAAS,EAAA;AAAAsB,YAAA,CAAAtB,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}