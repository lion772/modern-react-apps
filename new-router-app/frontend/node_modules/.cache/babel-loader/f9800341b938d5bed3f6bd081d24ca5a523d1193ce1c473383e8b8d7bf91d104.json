{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\willi\\\\Documents\\\\modern-react-apps\\\\new-router-app\\\\frontend\\\\src\\\\pages\\\\Events.js\",\n  _s = $RefreshSig$();\nimport EventsList from \"../components/EventsList\";\nimport { useLoaderData, json } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const data = useLoaderData();\n  const events = data.events;\n  if (data.error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: data.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventsList, {\n      events: events\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(EventsPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport async function loader() {\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (!response.ok) {\n    /* throw new Response(\r\n        JSON.stringify({\r\n            message: \"Could not fetch events...\",\r\n        }),\r\n        { status: 500 }\r\n    ); */\n    return json({\n      message: \"Could not fetch events...\"\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nexport default EventsPage;\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["EventsList","useLoaderData","json","jsxDEV","_jsxDEV","Fragment","_Fragment","EventsPage","_s","data","events","error","children","message","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","response","fetch","ok","status","$RefreshReg$"],"sources":["C:/Users/willi/Documents/modern-react-apps/new-router-app/frontend/src/pages/Events.js"],"sourcesContent":["import EventsList from \"../components/EventsList\";\r\nimport { useLoaderData, json } from \"react-router-dom\";\r\n\r\nfunction EventsPage() {\r\n    const data = useLoaderData();\r\n    const events = data.events;\r\n    if (data.error) {\r\n        return <p>{data.message}</p>;\r\n    }\r\n    return (\r\n        <>\r\n            <EventsList events={events} />\r\n        </>\r\n    );\r\n}\r\n\r\nexport async function loader() {\r\n    const response = await fetch(\"http://localhost:8080/events\");\r\n\r\n    if (!response.ok) {\r\n        /* throw new Response(\r\n            JSON.stringify({\r\n                message: \"Could not fetch events...\",\r\n            }),\r\n            { status: 500 }\r\n        ); */\r\n        return json(\r\n            {\r\n                message: \"Could not fetch events...\",\r\n            },\r\n            { status: 500 }\r\n        );\r\n    } else {\r\n        return response;\r\n    }\r\n}\r\n\r\nexport default EventsPage;\r\n"],"mappings":";;AAAA,OAAOA,UAAU,MAAM,0BAA0B;AACjD,SAASC,aAAa,EAAEC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAMC,IAAI,GAAGR,aAAa,CAAC,CAAC;EAC5B,MAAMS,MAAM,GAAGD,IAAI,CAACC,MAAM;EAC1B,IAAID,IAAI,CAACE,KAAK,EAAE;IACZ,oBAAOP,OAAA;MAAAQ,QAAA,EAAIH,IAAI,CAACI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAChC;EACA,oBACIb,OAAA,CAAAE,SAAA;IAAAM,QAAA,eACIR,OAAA,CAACJ,UAAU;MAACU,MAAM,EAAEA;IAAO;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBAChC,CAAC;AAEX;AAACT,EAAA,CAXQD,UAAU;EAAA,QACFN,aAAa;AAAA;AAAAiB,EAAA,GADrBX,UAAU;AAanB,OAAO,eAAeY,MAAMA,CAAA,EAAG;EAC3B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IACd;AACR;AACA;AACA;AACA;AACA;IACQ,OAAOpB,IAAI,CACP;MACIW,OAAO,EAAE;IACb,CAAC,EACD;MAAEU,MAAM,EAAE;IAAI,CAClB,CAAC;EACL,CAAC,MAAM;IACH,OAAOH,QAAQ;EACnB;AACJ;AAEA,eAAeb,UAAU;AAAC,IAAAW,EAAA;AAAAM,YAAA,CAAAN,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}