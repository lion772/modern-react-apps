{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\willi\\\\Documents\\\\modern-react-apps\\\\new-router-app\\\\frontend\\\\src\\\\App.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Challenge / Exercise\n\nconst router = createBrowserRouter( /*#__PURE__*/_jsxDEV(Route, {\n  path: \"/\",\n  element: /*#__PURE__*/_jsxDEV(SuspenseLayout, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 22\n  }, this),\n  errorElement: /*#__PURE__*/_jsxDEV(NoQuotesFound, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 27\n  }, this),\n  children: [/*#__PURE__*/_jsxDEV(Route, {\n    index: true,\n    element: /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/quotes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 35\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 13\n  }, this), /*#__PURE__*/_jsxDEV(Route, {\n    path: \"/quotes\",\n    element: /*#__PURE__*/_jsxDEV(AllQuotes, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 26\n    }, this),\n    loader: quotesLoader\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 13\n  }, this), /*#__PURE__*/_jsxDEV(Route, {\n    path: \"/quotes/:quoteId\",\n    element: /*#__PURE__*/_jsxDEV(QuoteDetail, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 26\n    }, this),\n    loader: quoteLoader,\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      index: true,\n      element: /*#__PURE__*/_jsxDEV(Link, {\n        className: \"btn--flat\",\n        to: `comments`,\n        children: \"Load comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"comments\",\n      element: /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 30\n      }, this),\n      loader: commentsLoader,\n      action: postCommentAction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 13\n  }, this), /*#__PURE__*/_jsxDEV(Route, {\n    path: \"/new-quote\",\n    element: /*#__PURE__*/_jsxDEV(NewQuote, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 26\n    }, this),\n    action: postQuoteAction\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 13\n  }, this), /*#__PURE__*/_jsxDEV(Route, {\n    path: \"/not-found\",\n    element: /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 49\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 13\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 4,\n  columnNumber: 9\n}, this));\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 12\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["router","createBrowserRouter","_jsxDEV","Route","path","element","SuspenseLayout","fileName","_jsxFileName","lineNumber","columnNumber","errorElement","NoQuotesFound","children","index","Navigate","to","AllQuotes","loader","quotesLoader","QuoteDetail","quoteLoader","Link","className","Comments","commentsLoader","action","postCommentAction","NewQuote","postQuoteAction","NotFound","App","RouterProvider","_c","$RefreshReg$"],"sources":["C:/Users/willi/Documents/modern-react-apps/new-router-app/frontend/src/App.js"],"sourcesContent":["// Challenge / Exercise\n\nconst router = createBrowserRouter(\n        <Route\n            path=\"/\"\n            element={<SuspenseLayout />}\n            errorElement={<NoQuotesFound />}\n        >\n            <Route index element={<Navigate to={\"/quotes\"} />} />\n            <Route\n                path=\"/quotes\"\n                element={<AllQuotes />}\n                loader={quotesLoader}\n            />\n            <Route\n                path={\"/quotes/:quoteId\"}\n                element={<QuoteDetail />}\n                loader={quoteLoader}\n            >\n                <Route\n                    index\n                    element={\n                        <Link className=\"btn--flat\" to={`comments`}>\n                            Load comments\n                        </Link>\n                    }\n                />\n                <Route\n                    path=\"comments\"\n                    element={<Comments />}\n                    loader={commentsLoader}\n                    action={postCommentAction}\n                ></Route>\n            </Route>\n            <Route\n                path={\"/new-quote\"}\n                element={<NewQuote />}\n                action={postQuoteAction}\n            />\n            <Route path={\"/not-found\"} element={<NotFound />} />\n        </Route>\n    \n);\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nfunction App() {\n    return <RouterProvider router={router} />;\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}